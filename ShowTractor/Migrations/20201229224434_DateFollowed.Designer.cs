// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShowTractor.Database;

namespace ShowTractor.Migrations
{
    [DbContext(typeof(ShowTractorDbContext))]
    [Migration("20201229224434_DateFollowed")]
    partial class DateFollowed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ShowTractor.Database.AdditionalAttribute", b =>
                {
                    b.Property<Guid>("TvSeasonId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssemblyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("TvSeasonId", "AssemblyName", "Name");

                    b.ToTable("AdditionalAttributes");
                });

            modelBuilder.Entity("ShowTractor.Database.TvEpisode", b =>
                {
                    b.Property<Guid>("TvSeasonId")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Artwork")
                        .HasColumnType("BLOB");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("FirstAirDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Runtime")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("WatchProgress")
                        .HasColumnType("TEXT");

                    b.HasKey("TvSeasonId", "EpisodeNumber");

                    b.ToTable("TvEpisodes");
                });

            modelBuilder.Entity("ShowTractor.Database.TvSeason", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Artwork")
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("DateFollowed")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Following")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenresCsv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RatingsCsv")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Season")
                        .HasColumnType("INTEGER");

                    b.Property<string>("SeasonDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ShowDescription")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("ShowEnded")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("ShowFinale")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ShowName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TvSeasons");
                });

            modelBuilder.Entity("ShowTractor.Database.AdditionalAttribute", b =>
                {
                    b.HasOne("ShowTractor.Database.TvSeason", "TvSeason")
                        .WithMany("AdditionalAttributes")
                        .HasForeignKey("TvSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvSeason");
                });

            modelBuilder.Entity("ShowTractor.Database.TvEpisode", b =>
                {
                    b.HasOne("ShowTractor.Database.TvSeason", null)
                        .WithMany("Episodes")
                        .HasForeignKey("TvSeasonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShowTractor.Database.TvSeason", b =>
                {
                    b.Navigation("AdditionalAttributes");

                    b.Navigation("Episodes");
                });
#pragma warning restore 612, 618
        }
    }
}
